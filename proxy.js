const express=require("express"),axios=require("axios"),FormData=require("form-data"),multer=require("multer"),upload=multer(),app=express(),port=3e3;app.use(express.json()),app.post("/mobile/sdk-licenca",upload.any(),(async(e,a)=>{try{const s=e.body.fullUrl;if(!s)return a.status(400).send("fullUrl parameter is required");const t=new FormData;t.append("key",e.body.key),t.append("model",e.body.model),t.append("os",e.body.os),t.append("version",e.body.version),t.append("api_level",e.body.api_level),e.body.metadados&&t.append("metadados",e.body.metadados),e.body.origin&&t.append("origin",e.body.origin[0]),e.body.number_of_attempts&&t.append("number_of_attempts",e.body.number_of_attempts),e.body.capture_time&&t.append("capture_time",e.body.capture_time);const r=await axios.post(s,t,{headers:{...t.getHeaders(),Authorization:e.headers.authorization}});a.send(r.data)}catch(e){a.status(500).send(e.message)}})),app.post("/init/:sdkLicense",(async(e,a)=>{try{const s=e.body.fullUrl;if(!s)return a.status(400).send("fullUrl parameter is required");const t=await axios.post(s,{},{headers:{Authorization:e.headers.authorization}});a.send(t.data)}catch(e){a.status(500).send(e.message)}})),app.post("/check/:sdkLicense",upload.any(),(async(e,a)=>{try{const s=e.body.fullUrl;if(!s)return a.status(400).send("fullUrl parameter is required");const t=new FormData;t.append("msg",e.body.msg),t.append("selfieA",e.files[0].buffer,e.files[0].originalname),t.append("selfieB",e.files[1].buffer,e.files[1].originalname);const r=await axios.post(s,t,{headers:{...t.getHeaders(),Authorization:e.headers.authorization}});a.send(r.data)}catch(e){a.status(500).send(e.message)}})),app.post("/liveness/prediction",upload.any(),(async(e,a)=>{try{const s=e.body.fullUrl;if(!s)return a.status(400).send("fullUrl parameter is required");const t=new FormData;for(const a in e.body)"fullUrl"!==a&&(Array.isArray(e.body[a])?t.append(a,e.body[a][0]):t.append(a,e.body[a]));e.files&&e.files.length>0&&e.files.forEach((e=>{t.append(e.fieldname,e.buffer,e.originalname)}));const r=await axios.post(s,t,{headers:{...t.getHeaders(),Authorization:e.headers.authorization}});a.send(r.data)}catch(e){a.status(500).send(e.message)}})),app.listen(3e3,(()=>{}));