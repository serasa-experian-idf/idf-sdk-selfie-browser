const express=require("express"),axios=require("axios"),FormData=require("form-data"),multer=require("multer"),upload=multer(),app=express(),port=3e3;app.use(express.json()),app.post("/mobile/sdk-licenca",upload.any(),(async(e,o)=>{try{console.log("/mobile/sdk-licenca");const a=e.body.fullUrl;if(console.log("fullUrl:",a),!a)return o.status(400).send("fullUrl parameter is required");const s=new FormData;s.append("key",e.body.key),s.append("model",e.body.model),s.append("os",e.body.os),s.append("version",e.body.version),s.append("api_level",e.body.api_level),e.body.metadados&&s.append("metadados",e.body.metadados),e.body.origin&&s.append("origin",e.body.origin[0]),e.body.number_of_attempts&&s.append("number_of_attempts",e.body.number_of_attempts),e.body.capture_time&&s.append("capture_time",e.body.capture_time);const r=await axios.post(a,s,{headers:{...s.getHeaders(),Authorization:e.headers.authorization}});o.send(r.data)}catch(e){console.error("Error:",e),o.status(500).send(e.message)}})),app.post("/init/:sdkLicense",(async(e,o)=>{try{console.log("/init/:sdkLicense");const a=e.body.fullUrl;if(console.log("fullUrl:",a),!a)return o.status(400).send("fullUrl parameter is required");const s=await axios.post(a,{},{headers:{Authorization:e.headers.authorization}});o.send(s.data)}catch(e){console.error("Error:",e),o.status(500).send(e.message)}})),app.post("/check/:sdkLicense",upload.any(),(async(e,o)=>{try{console.log("/check/:sdkLicense");const a=e.body.fullUrl;if(console.log("fullUrl:",a),!a)return o.status(400).send("fullUrl parameter is required");const s=new FormData;s.append("msg",e.body.msg),s.append("selfieA",e.files[0].buffer,e.files[0].originalname),s.append("selfieB",e.files[1].buffer,e.files[1].originalname);const r=await axios.post(a,s,{headers:{...s.getHeaders(),Authorization:e.headers.authorization}});o.send(r.data)}catch(e){console.error("Error:",e),o.status(500).send(e.message)}})),app.post("/liveness/prediction",upload.any(),(async(e,o)=>{try{const a=e.body.fullUrl;if(console.log("fullUrl:",a),!a)return o.status(400).send("fullUrl parameter is required");const s=new FormData;for(const o in e.body)"fullUrl"!==o&&(Array.isArray(e.body[o])?s.append(o,e.body[o][0]):s.append(o,e.body[o]));e.files&&e.files.length>0&&e.files.forEach((e=>{s.append(e.fieldname,e.buffer,e.originalname)}));const r=await axios.post(a,s,{headers:{...s.getHeaders(),Authorization:e.headers.authorization}});o.send(r.data)}catch(e){console.error("Error:",e),o.status(500).send(e.message)}})),app.listen(3e3,(()=>{console.log("Server running at http://localhost:3000")}));